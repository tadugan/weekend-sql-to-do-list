TODO: To-Do list web application 

    Setup
    [x] Create file structure for project
    [x] Source CSS, Javascript, and Jquery into index.html

    Client Side
    [x] Create input fields for adding a task
        [x] Add input field validation
        [x] Set max character length (RESEARCH THIS)
    [x] Create submit button for adding a task
    [x] Create a Table to display tasks 
    [x] Refresh DOM when a new task is added
    [x] Each task had "Complete" & "Delete" buttons
    [x] Ajax POST request to add new task when submit button is pressed
    [x] Ajax GET request to display all tasks on the DOM 
        [x] Display tasks on page load
    [x] Ajax PUT request to update "Complete" status of each task 
    [x] Ajax DELETE request to delete a task from the SQL database 
        [x] Remove task from DOM 
        [x] Remove task from Database 
    [x] CSS Styling
        [x] When a task is complete, its visual representation should change on the front end (background-color changes to green)
        [x] Task is checked as "complete" visually
        [x] Add styling to the page to make it more professional
            [x] Background color 
            [x] font family and size

    Server Side 
    [x] npm init to install package.json
    [x] npm install express
    [x] npm install page
    [x] setup server.js
    [x] add start to package.json  
    [x] setup pool.js 
    [x] setup tasks.router.js 
        [x] GET requests
        [x] POST requests 
        [x] PUT requests 
        [x] DELETE requests 

    Database
    [x] create database in Postico called weekend-to-do-app
    [x] create table to store tasks
    [x] populate table with test task data
    [x] Learn how to use booleans in SQL queries

        Database model
            ID | task name | task description | completed?

    Other Project Requirements
    [x] create a database.sql file in the repo including all the queries to create the table and populate it with data  

    Stretch Goals
    NOTE: Use a GIT branch to work on each stretch goal 
    [ ] feature-styling-bootstrap
        [ ] Add bootstrap styling
            [ ] Buttons - creation and completion buttons = green, deletion buttons = red
            [ ] Inputs - styled in the bootstrap way
            [ ] Responsive - make app responsive to different screen sizes
    [x] feature-confirm-delete
        [x] Verification alert to make sure you want to delete a task (sweet alerts)
    [ ] feature-ordering-task-query
        [ ] Research and implement Query Params to reverse the order of the returned todos.
    [x] feature-time-completed
        [x] Record and display when a task was completed 
            [x] update SQL table creation 
            [x] update POST request in router 
            [x] update client.js and index.html to append new column and row to DOM 